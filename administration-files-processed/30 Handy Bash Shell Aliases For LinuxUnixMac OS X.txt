30 Handy Bash Shell Aliases For Linux / Unix / Mac OS X



link: http://www.cyberciti.biz/tips/bash-aliases-mac-centos-linux-unix.html 

>>An alias is nothing but shortcut to commands. The alias command allows user to launch any command or group of commands (including options and filenames) by entering a single word. 

>>Use alias command to display list of all defined aliases. You can add user defined aliases to ~/.bashrc file. You can cut down typing time with these aliases, work smartly, and increase productivity at the command prompt.

More about aliases

>>The general syntax for the alias command for the bash shell is as follows.

Task: List aliases

Type the following command:

 
command: alias
 

Sample outputs:

alias ..='cd ..'
alias amazonbackup='s3backup'
alias apt-get='sudo apt-get'
...


>>By default alias command shows a list of aliases that are defined for the current user.

Task: Define / create an alias (bash syntax)

To create the alias use the following syntax:

command: 

alias name=value
alias name='command'
alias name='command arg1 arg2'
alias name='/path/to/script'
alias name='/path/to/script.pl arg1'
 

In this example, create the alias c for the commonly used clear command, which clears the screen, by typing the following command and then pressing the ENTER key:

 
command: alias c='clear'
 

Then, to clear the screen, instead of typing clear, you would only have to type the letter 'c' and press the [ENTER] key:

 
c
 

>>>>>>>>>>>>>>>>>>>>Task: Disable an alias temporarily (bash syntax)

An alias can be disabled temporarily using the following syntax:

 
## path/to/full/command
/usr/bin/clear
## call alias with a backslash ##
\c
 

Task: Remove an alias (bash syntax)

You need to use the command called unalias to remove aliases. Its syntax is as follows:

 
unalias aliasname
 

In this example, remove the alias c which was created in an earlier example:

 
unalias c
 


